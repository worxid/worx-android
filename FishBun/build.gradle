apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.hiya.jacoco-android'

jacoco {
    toolVersion = "0.8.7"
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.hiya:jacoco-android:0.2'
        classpath 'co.riiid:gradle-github-plugin:0.4.2'
    }
}


android {
    signingConfigs {
        release {
            storeFile file('/Users/andrea/Folders/Upwork/Worx/keystore')
            storePassword 'WORXWORX'
            keyAlias 'WORX'
            keyPassword 'WORXWORX'
        }
    }
    namespace 'com.sangcomz.fishbun'
    compileSdkVersion gradle.compileSdk

    defaultConfig {
        minSdkVersion gradle.minSdk
        targetSdkVersion gradle.targetSdk
        consumerProguardFile('proguard-rules.pro')
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    lintOptions {
        abortOnError false
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.20"
    implementation 'androidx.appcompat:appcompat:1.5.1'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.7.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.9.0'
    androidTestImplementation 'androidx.test:runner:1.5.1'
    androidTestImplementation 'org.mockito:mockito-android:4.9.0'

    compileOnly 'io.coil-kt:coil:2.2.2'
    compileOnly 'com.github.bumptech.glide:glide:4.14.2'
}

tasks.withType(Javadoc).all {
    enabled = false
}

configurations.all{
    resolutionStrategy {
        eachDependency { details ->
            if ('org.jacoco' == details.requested.group) {
                details.useVersion "0.8.7"
            }
        }
    }
}